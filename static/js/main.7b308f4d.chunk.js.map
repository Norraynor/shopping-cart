{"version":3,"sources":["App.js","components/Nav.js","components/Product.js","components/Shop.js","components/ShoppingCart.js","Routes.js","index.js"],"names":["App","className","to","Nav","props","count","Product","useState","setCount","data","name","src","img","alt","price","id","onClick","newCount","type","min","value","onChange","event","target","addItem","Shop","currentItems","itemsArr","setItemsArr","item","itemName","newItems","filter","obj","length","map","element","parseInt","concat","checkCart","countItems","useEffect","addItems","handleChange","ShoppingCart","removeItem","updateItemList","items","increaseCount","decreaseCount","changeItems","alert","Routes","setItems","receiveItems","receiveCount","basename","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b308f4d.chunk.js","sourcesContent":["import './App.css';\nimport { Link  } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"rainbow-text\">Homepage of the one and only shop for youuu!</h1>\n      <p className=\"rainbow-text\">with annoying text that wont stop moving</p>\n      <Link className=\"link\" to=\"/shop\"><h2>START SHOPPING NOW!</h2></Link>\n    </div>\n  );\n}\n\nexport default App;\n","import '../styles/Nav.css';\nimport React from 'react';\nimport { Link  } from \"react-router-dom\";\n\nfunction Nav(props) {\n  //if props.count >0 then show number on shopping cart\n  return (\n    <div className=\"nav\">\n        <ul>\n            <li><Link className=\"link\" to=\"/\">Home</Link></li>\n            <li><Link className=\"link\" to=\"/shop\">Shop</Link></li>\n            <li><Link className=\"link\" to=\"/cart\">Shopping Cart</Link> {props.count}</li>\n        </ul>\n    </div>\n  );\n}\n\nexport default Nav;\n","import { useState } from 'react';\nimport '../styles/Product.css';\n\nfunction Product(props) {\n    const [count,setCount] = useState(1);\n\n    function handleClick(event){\n        //add item to cart\n        props.addItem(props.data,count)\n    }\n    function handleAdd(){\n      let newCount=count;\n      newCount++;\n      setCount(newCount);\n    }\n    function handleSub(){\n      let newCount=count;\n      if(count>1){\n        newCount--;\n      }\n      setCount(newCount);\n    }\n    function handleChange(event){\n      setCount(event.target.value);\n    }\n    return (\n      <div className=\"product\">\n        <h5>{props.data.name}</h5>\n        <img src={props.data.img} alt={props.data.name}/>\n        <p>Price: {props.data.price}$</p>\n        <div id=\"amount\">\n          <button id=\"subtract\" onClick={handleSub}>-</button>\n          <input type=\"number\" min=\"1\" value={count} onChange={handleChange}/>\n          <button id=\"add\" onClick={handleAdd}>+</button>\n        </div>\n        <button onClick={handleClick}>Add to cart</button>\n      </div>\n    );\n  }\n  \n  export default Product;\n  ","import { useEffect, useState } from 'react';\nimport '../styles/Shop.css';\n\nimport Product from \"./Product\";\n\nfunction Shop(props) {\n    const items= [\n        {\n            name: \"Teen Banana\",\n            img: \"https://media.istockphoto.com/photos/green-plantain-picture-id138001887?k=20&m=138001887&s=612x612&w=0&h=UGD5rUs37gxxPlNnFliHm001nyf4QNCjmo7nuOAlY0o=\",\n            price: 1,\n            count: 0            \n        },\n        {\n            name: \"Banana\",\n            img: \"https://static.turbosquid.com/Preview/2014/07/03__18_47_33/banana_03.jpgbde52cae-2ae2-483f-bf01-645136084da8Larger.jpg\",\n            price: 200,\n            count: 0\n        },\n        {\n            name: \"Dead Banana\",\n            img: \"https://media.istockphoto.com/photos/rotten-banana-picture-id519714894?s=612x612\",\n            price: 1000000,\n            count: 0          \n        }        \n    ]\n    const [itemsArr,setItemsArr] = useState(props.currentItems);\n    useEffect(()=>{\n      function handleChange(props){\n        props.addItems(itemsArr);\n        countItems();\n      }\n      handleChange(props);\n    },[itemsArr])\n\n    function addItem(item,count){\n        checkCart(item.name,count);\n        //props.addItem(item);\n    }\n    function countItems(){\n      props.count(itemsArr.length);\n    }\n    \n    function checkCart(itemName,count){\n      if(itemName === \"\"){\n        return false;\n      }\n      let newItems = itemsArr;\n      let itemExists= itemsArr.filter((obj)=>{\n        return obj.name===itemName;\n      })\n      if(itemExists.length>0){\n        newItems=itemsArr.map(element=>{\n          if(element.name === itemName){\n            element.count=parseInt(element.count);\n            element.count+=parseInt(count);\n          }\n          return element;\n        })\n      }\n      else{\n        newItems =itemsArr.concat({name: itemName, count:count});\n      }\n      setItemsArr(newItems);\n    }\n    return (\n      <div className=\"shop\">\n        <h1>Banana Shop</h1>\n        <div className=\"products\">\n        {\n            items.map((item)=>{\n                return <Product key={item.name} data={item} addItem={addItem}/>\n            })\n        }\n        </div>\n      </div>\n    );\n  }\n  \n  export default Shop;\n  ","import '../styles/ShoppingCart.css';\n\n\nfunction ShoppingCart(props) {\n  //get item and increase amount ---return number of items  \n  //functions for clearing cart, updating items list, deleting item\n  function clearCart(){\n    //delete all items\n    updateItemList([]);\n  }\n  function removeItem(event){\n    //delete one item\n    let newList=props.items.filter((item)=>{\n      if(item.name!==event.target.id){\n        return item;\n      }\n    })    \n    updateItemList(newList);\n  }\n  function increaseCount(event){\n    //increase count of item    \n    let newList = props.items.map((item)=>{\n      if(item.name ===event.target.id){\n        item.count++;\n      }\n      return item;\n    })\n    updateItemList(newList);\n  }\n  function decreaseCount(event){\n    //decrease count of item\n    let newList = props.items.map((item)=>{\n      if(item.name ===event.target.id){\n        item.count--;\n      }\n      return item;\n    })\n    updateItemList(newList);\n  }\n  function updateItemList(items,count=items.length){\n    props.changeItems(items);\n    countItems(count);\n  }\n  function countItems(count){\n    props.count(count);\n  }\n  return (\n    <div className=\"shopping-cart\">\n      \n      <h1>Shopping Cart</h1>\n      {\n        props.items.map(element=>{\n            return (\n              <div className=\"cart-product\" key={element.name}>\n                <h3>{element.name}</h3>\n                <h4>{element.count}</h4>\n                <button id={element.name} onClick={decreaseCount}>-</button>\n                <button id={element.name} onClick={increaseCount}>+</button>\n                <button id={element.name} onClick={removeItem}>del</button>\n              </div>\n              )\n          })      \n      }\n      <button id=\"checkout\" onClick={()=>{alert(\"you cant checkout\")}}>CHECKOUT!!!</button>  \n      <button id=\"clear\" onClick={clearCart}>CLEAR CART</button>  \n    </div>\n  );\n}\n\nexport default ShoppingCart;\n","import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport Nav from \"./components/Nav\";\nimport Shop from \"./components/Shop\";\nimport ShoppingCart from \"./components/ShoppingCart\";\n\nfunction Routes() {\n  const [items,setItems] = useState([])\n  const [count,setCount] = useState(0);\n  useEffect(()=>{\n    setCount(items.length);\n  },[count])\n\n  function receiveItems(data){\n    setItems(data);\n  }\n  function receiveCount(data){\n    setCount(data);\n  }\n  return (\n      <BrowserRouter basename={\"shopping-cart/\"}>\n        <Nav count={count}/>\n        <Switch>\n            <Route exact path=\"/\" component={App}/>\n            <Route exact path=\"/shop\" render={(props)=> <Shop {...props} addItems={receiveItems} count={receiveCount} currentItems={items}/>}/>\n            <Route exact path=\"/cart\" render={(props)=> <ShoppingCart {...props} items={items} changeItems={receiveItems} count={receiveCount}/>}/>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}